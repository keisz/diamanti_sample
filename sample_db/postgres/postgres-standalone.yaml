apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    name: postgres-1-claim
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100G
    storageClassName: high
  status:
    phase: Pending
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: null
    labels:
      app: postgres
      diamanti.com/app: postgres-1
    name: postgres-1
  spec:
    replicas: 1
    selector:
      app: postgres
      diamanti.com/app: postgres-1
    template:
      metadata:
        annotations:
          diamanti.com/endpoint0: '{"network":"blue","perfTier":"high"}'
        creationTimestamp: null
        labels:
          app: postgres
          diamanti.com/app: postgres-1
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: pgbench
          - name: POSTGRES_PASSWORD
            value: password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          image: postgres
          imagePullPolicy: IfNotPresent
          name: postgres
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data/pgdata
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-1-claim
  status:
    replicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: postgres-1
  spec:
    clusterIP: None
    ports:
    - name: tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      diamanti.com/app: postgres-1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
